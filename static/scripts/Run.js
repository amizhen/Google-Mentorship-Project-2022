document.querySelector(".runButton").addEventListener('click', function () {
    this.classList.toggle('active')
    document.querySelectorAll(".dataContent").forEach(element => element.remove());
    document.querySelectorAll('.collapsible.open').forEach(elem => elem.classList.toggle("open"));
    fetch(window.location.href + "run",
        {
            method: 'POST',
            headers: {
                'Content-type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                region,
                solarPlants,
                windPlants,
                percentagePower,
                windFarmSize,
                solarFarmSize,
                storageCap
            })
        }).then(res => {
            if (res.ok) {
                return res.json();
            } else alert('An unexpected error has occurred');
        }).then(jsonResponse => {
            this.classList.toggle('active')
            data = jsonResponse;
            updateDropDowns();
        })
})

function formatDateObject(date) {
    return `${date.getMonth()}/${date.getDay()}/${date.getFullYear()} ${date.getHours()}:00`
}

function updateDropDowns() {
    var blackouts = getBlackoutsFromData(data);
    var parentElem = document.querySelector("#dataPanel")
    blackouts.forEach(blackout => {
        var pDataContent = document.createElement('p');
        pDataContent.innerHTML = blackout.dateTimeRange.length == 1 ? `
            <strong>Duration:</strong> 1 h <br>
            <strong>Energy Deficit:</strong> ${blackout.storageHistory[0]} kWh <br>
            <strong>Energy Generated:</strong> ${blackout.totalPowerGenerated[0]} kWh <br>
            <strong>Wind Energy Generated:</strong> ${blackout.windPowerGenerated[0]} kWh <br>
            <strong>Solar Energy Generated:</strong> ${blackout.solarPowerGenerated[0]} kWh
        ` : `
            <strong>Duration:</strong> ${(blackout.endDateTime - blackout.startDateTime) / 3600} h <br>
            <strong>Max Energy Deficit:</strong> ${Math.abs(Math.min(...blackout.storageHistory))} kWh <br>
            <strong>Min Energy Deficit:</strong> ${Math.abs(Math.max(...blackout.storageHistory))} kWh <br>
            <strong>Max Energy Generated:</strong> ${Math.max(...blackout.totalPowerGenerated)} kWh <br>
            <strong>Min Energy Generated:</strong> ${Math.min(...blackout.totalPowerGenerated)} kWh <br>
            <strong>Average Energy Deficit:</strong> ${blackout.averageDeficit} kWh <br>
            <strong>Average Energy Generated:</strong> ${blackout.averagePowerGenerated} kWh <br>
            <strong>Average Wind Energy Generated:</strong> ${blackout.averageWindGenerated} kWh <br>
            <strong>Average Solar Energy Generated:</strong> ${blackout.averageSolarGenerated} kWh
            `

        var innerDataContent = document.createElement('div');
        innerDataContent.className = "dataContent";
        innerDataContent.appendChild(pDataContent);

        var pDate = document.createElement('p');
        console.log(blackout.startDateTime);
        console.log(blackout.endDateTime);
        pDate.textContent = `${formatDateObject(new Date(blackout.startDateTime * 1000))} - ${formatDateObject(new Date(blackout.endDateTime * 1000))}`

        var innerCollapsible = document.createElement('div');
        innerCollapsible.className = "collapsible";
        innerCollapsible.appendChild(pDate);

        var outDataContent = document.createElement('div');
        outDataContent.className = "dataContent";
        outDataContent.appendChild(innerCollapsible);
        outDataContent.appendChild(innerDataContent);

        parentElem.appendChild(outDataContent)
    })

    addEventListenersToCollapsibles();
}

/*

<div class="dataContent">
    <div class="collapsible">
        <p>Date</p>
    </div>
    <div class="dataContent">
        <p>
            Estimated wind speed: [] m/s<br>
            Power generated by wind turbine(s): [] <br>
            Global Horizonal Irradience: [] W/m<sup>2</sup> <br>
            Power generated by solar panel(s): [] <br>
            Energy consumption: [] <br>
            Total energy generated: [] <br>
            Energy deficit: [] <br>
        </p>
    </div>
</div>

*/